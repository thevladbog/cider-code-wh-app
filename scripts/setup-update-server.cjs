#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è Electron-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 * –¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js –∏ npm-–ø–∞–∫–µ—Ç–æ–≤ express –∏ cors.
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * 1. –°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é updates/
 * 2. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ–π —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (.exe, .dmg, .AppImage –∏ —Ç.–¥.)
 * 3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª latest.json —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
 * 4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç: node setup-update-server.cjs
 */

const express = require('express');
const cors = require('cors');
const fs = require('fs');
const path = require('path');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3001;
const UPDATES_DIR = path.join(__dirname, '../updates');
const LATEST_JSON = path.join(UPDATES_DIR, 'latest.json');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!fs.existsSync(UPDATES_DIR)) {
  fs.mkdirSync(UPDATES_DIR, { recursive: true });
  console.log(`‚úì –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${UPDATES_DIR}`);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
if (!fs.existsSync(LATEST_JSON)) {
  const defaultLatest = {
    version: '1.0.0',
    notes: '–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è',
    releaseDate: new Date().toISOString(),
    platforms: {
      win32: {
        url: 'https://your-update-server.com/updates/bottle-code-wh-app-setup.exe',
        signature: '', // –ü–æ–¥–ø–∏—Å—å —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
        size: 0 // –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
      },
      darwin: {
        url: 'https://your-update-server.com/updates/bottle-code-wh-app.dmg',
        signature: '',
        size: 0
      },
      linux: {
        url: 'https://your-update-server.com/updates/bottle-code-wh-app.AppImage',
        signature: '',
        size: 0
      }
    }
  };

  fs.writeFileSync(LATEST_JSON, JSON.stringify(defaultLatest, null, 2));
  console.log(`‚úì –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏: ${LATEST_JSON}`);
}

// –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä Express
const app = express();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
app.use(cors({
  origin: function(origin, callback) {
    // –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    const allowedOrigins = ['http://localhost:3000', 'https://your-app-domain.com'];
    if (!origin || allowedOrigins.includes(origin)) {
      callback(null, true);
    } else {
      callback(new Error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –ø–æ–ª–∏—Ç–∏–∫–æ–π CORS'));
    }
  }
}));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use('/updates', express.static(UPDATES_DIR, {
  setHeaders: (res, filePath) => {
    if (path.extname(filePath) === '.exe') {
      // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è exe —Ñ–∞–π–ª–æ–≤
      res.set('Content-Type', 'application/octet-stream');
      res.set('Content-Disposition', `attachment; filename="${path.basename(filePath)}"`);
    }
  }
}));

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
app.get('/latest', (req, res) => {
  try {
    if (fs.existsSync(LATEST_JSON)) {
      const latestInfo = JSON.parse(fs.readFileSync(LATEST_JSON, 'utf8'));
      res.json(latestInfo);
    } else {
      res.status(404).json({ error: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –≤–µ—Ä—Å–∏–∏:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏' });
  }
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
app.get('/check-update', (req, res) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∫–ª–∏–µ–Ω—Ç–∞
    const { version, platform } = req.query;
    
    if (!version || !platform) {
      return res.status(400).json({ error: '–ù–µ —É–∫–∞–∑–∞–Ω–∞ –≤–µ—Ä—Å–∏—è –∏–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞' });
    }
    
    if (fs.existsSync(LATEST_JSON)) {
      const latestInfo = JSON.parse(fs.readFileSync(LATEST_JSON, 'utf8'));
      
      // –ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
      const currentParts = version.split('.').map(Number);
      const latestParts = latestInfo.version.split('.').map(Number);
      
      let hasUpdate = false;
      
      // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏
      for (let i = 0; i < Math.max(currentParts.length, latestParts.length); i++) {
        const currentPart = currentParts[i] || 0;
        const latestPart = latestParts[i] || 0;
        
        if (latestPart > currentPart) {
          hasUpdate = true;
          break;
        } else if (latestPart < currentPart) {
          break;
        }
      }
      
      if (hasUpdate && latestInfo.platforms[platform]) {
        // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —ç—Ç–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        res.json({
          updateAvailable: true,
          ...latestInfo,
          updateInfo: latestInfo.platforms[platform]
        });
      } else {
        res.json({
          updateAvailable: false,
          currentVersion: version,
          latestVersion: latestInfo.version
        });
      }
    } else {
      res.status(404).json({ error: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π' });
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üìÅ –ü–∞–ø–∫–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏: ${UPDATES_DIR}`);
  console.log(`üåê –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: http://localhost:${PORT}`);
  console.log(`‚ÑπÔ∏è  –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ—Ä—Å–∏–∏: http://localhost:${PORT}/latest`);
  console.log(`üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: http://localhost:${PORT}/check-update?version=1.0.0&platform=win32`);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑—è—â–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.on('SIGINT', () => {
  console.log('\nüëã –°–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  process.exit(0);
});
