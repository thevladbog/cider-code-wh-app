#!/usr/bin/env node

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Forge –¥–ª—è macOS DMG
 */

const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º package.json
const packagePath = path.join(__dirname, '..', 'package.json');
const packageData = JSON.parse(fs.readFileSync(packagePath, 'utf8'));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏ DMG
const dmgName = `bottle-c-wh-${packageData.version}`;
const maxLength = 27;

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ macOS DMG');
console.log('=====================================');
console.log(`üì¶ –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${packageData.version}`);
console.log(`üìÅ –ò–º—è DMG: "${dmgName}"`);
console.log(`üìè –î–ª–∏–Ω–∞ –∏–º–µ–Ω–∏: ${dmgName.length} —Å–∏–º–≤–æ–ª–æ–≤`);
console.log(`üéØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: ${maxLength} —Å–∏–º–≤–æ–ª–æ–≤`);

if (dmgName.length <= maxLength) {
  console.log('‚úÖ –ò–º—è DMG —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º macOS');
  console.log(`üöÄ –ó–∞–ø–∞—Å: ${maxLength - dmgName.length} —Å–∏–º–≤–æ–ª–æ–≤`);
  process.exit(0);
} else {
  console.log('‚ùå –ò–º—è DMG –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç macOS');
  console.log(`üö® –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: ${dmgName.length - maxLength} —Å–∏–º–≤–æ–ª–æ–≤`);
  console.log('üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –∏–º—è –≤ forge.config.ts');
  process.exit(1);
}
